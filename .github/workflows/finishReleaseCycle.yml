name: Prepare production deploy

on:
  issues:
    types: [closed]

# The updateProduction and createNewStagingDeployCash jobs are executed when a StagingDeployCash is closed.
jobs:
  validate:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'StagingDeployCash')
    outputs:
      isValid: ${{ fromJSON(steps.isDeployer.outputs.IS_DEPLOYER) && !fromJSON(steps.checkDeployBlockers.outputs.HAS_DEPLOY_BLOCKERS) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.KIROKU_ADMIN_TOKEN }}

      - name: Setup git for KirokuAdmin
        uses: ./.github/actions/composite/setupGitForKirokuAdmin
        id: setupGitForKirokuAdmin
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Validate actor is deployer
        id: isDeployer
        run: |
          PERMISSION=$(gh api /repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission | jq -r '.permission')
          if [[ "$PERMISSION" == "write" || "$PERMISSION" == "admin" ]]; then
            echo "IS_DEPLOYER=true" >> "$GITHUB_OUTPUT"
          else
            echo "IS_DEPLOYER=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.KIROKU_ADMIN_TOKEN }}

      - name: Reopen and comment on issue (not a team member)
        if: ${{ !fromJSON(steps.isDeployer.outputs.IS_DEPLOYER) }}
        uses: ./.github/actions/javascript/reopenIssueWithComment
        with:
          GITHUB_TOKEN: ${{ secrets.KIROKU_ADMIN_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          COMMENT: |
            Sorry, only Kiroku deployers of can close deploy checklists.
            Reopening!

      - name: Check for any deploy blockers
        if: ${{ fromJSON(steps.isDeployer.outputs.IS_DEPLOYER) }}
        id: checkDeployBlockers
        uses: ./.github/actions/javascript/checkDeployBlockers
        with:
          GITHUB_TOKEN: ${{ secrets.KIROKU_ADMIN_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}

      - name: Reopen and comment on issue (has blockers)
        if: ${{ fromJSON(steps.isDeployer.outputs.IS_DEPLOYER) && fromJSON(steps.checkDeployBlockers.outputs.HAS_DEPLOY_BLOCKERS || 'false') }}
        uses: ./.github/actions/javascript/reopenIssueWithComment
        with:
          GITHUB_TOKEN: ${{ secrets.KIROKU_ADMIN_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          COMMENT: |
            This issue either has unchecked items or has not yet been marked with the `:shipit:` emoji of approval.
            Reopening!

      # - name: Announce failed workflow in Slack
      #   if: ${{ failure() }}
      #   uses: ./.github/actions/composite/announceFailedWorkflowInSlack
      #   with:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  # Update the production branch to trigger the production deploy.
  updateProduction:
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ fromJSON(needs.validate.outputs.isValid) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: staging
          token: ${{ secrets.KIROKU_ADMIN_TOKEN }}

      - name: Setup git for KirokuAdmin
        uses: ./.github/actions/composite/setupGitForKirokuAdmin
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Update production branch
        run: |
          # Re-create the production branch from staging
          git switch -c production

          # Force-update the remote production branch.
          git push --force origin production

      # - name: Announce failed workflow in Slack
      #   if: ${{ failure() }}
      #   uses: ./.github/actions/composite/announceFailedWorkflowInSlack
      #   with:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  # Create a new patch version to prep for next release cycle
  createNewPatchVersion:
    needs: validate
    if: ${{ fromJSON(needs.validate.outputs.isValid) }}
    uses: ./.github/workflows/createNewVersion.yml
    secrets: inherit
    with:
      SEMVER_LEVEL: PATCH

  # Update the staging branch to trigger a staging deploy
  updateStaging:
    runs-on: ubuntu-latest
    needs: [updateProduction, createNewPatchVersion]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          token: ${{ secrets.KIROKU_ADMIN_TOKEN }}

      - name: Setup git for KirokuAdmin
        uses: ./.github/actions/composite/setupGitForKirokuAdmin
        with:
          GPG_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Update staging branch to trigger staging deploy
        run: |
          # Re-create the staging branch from main
          git switch -c staging

          # Force-update the remote staging branch
          git push --force origin staging

      # - name: Announce failed workflow in Slack
      #   if: ${{ failure() }}
      #   uses: ./.github/actions/composite/announceFailedWorkflowInSlack
      #   with:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
